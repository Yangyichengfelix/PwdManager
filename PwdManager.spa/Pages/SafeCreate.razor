@page "/safe/create"
@* @attribute [Authorize] *@
@using Microsoft.AspNetCore.Authorization
@using Microsoft.JSInterop
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using MudBlazor.Components
@using PwdManager.spa.Utilities
<MudGrid>
    <MudItem xs="12" sm="12">
        
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">

                <MudGrid>
                    <MudItem xs="12" sm="6" md="6">
                        <MudTextField @bind-Value="entreeCreate.Password" Label="Password"
                                      Validation="@(new Func<string, IEnumerable<string>>(PasswordChecks.PasswordStrength))" Required="true"
                                      RequiredError="mdp est obligatoire!"
                                      InputType="@PasswordInput"
                                      Variant="Variant.Outlined"
                                      HelperText=@PasswordSample
                                      Adornment="Adornment.End"
                                      AdornmentIcon="@PasswordInputIcon"
                                      OnAdornmentClick="ChangePwdVisibility"
                                      AdornmentAriaLabel="Afficher Password" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="6">
                        <MudTextField @bind-Value="entreeCreate.PasswordConfirm"
                                      Variant="Variant.Outlined"
                                      Label="Confirmation mot de passe" Required="true" HelperText="Repeat password"
                                      InputType=@ConfirmInput
                                      Validation="@(new Func<string, string?>(PasswordMatch))"
                                      Adornment="Adornment.End"
                                      AdornmentIcon="@PasswordConfirmInputIcon"
                                      OnAdornmentClick="ChangeConfirmVisibility"
                                      AdornmentAriaLabel="Show Confirm" />
                    </MudItem>
                </MudGrid>
                <div class="d-flex align-center justify-space-between">

                    <MudIconButton Icon="@Icons.Material.Filled.Replay" Color="MudBlazor.Color.Primary" OnClick="@(()=>form.ResetAsync())"></MudIconButton>
                    <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" Disabled="@(!success)" OnClick="()=>GenerateHashedPwd()">Hash password</MudButton>
                    <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Info" Disabled="@(string.IsNullOrEmpty(coffreCreate.Salt)||string.IsNullOrEmpty(coffreCreate.Title))" OnClick="()=>Send()">Create vault</MudButton>
                </div>
                <MudGrid>

                <MudItem xs="12" sm="6" md="6">
                    <MudTextField @bind-Value="coffreCreate.Title"
                                  Variant="Variant.Outlined"
                                  Label="Title" HelperText="Vault title" />
                    <MudTextField @bind-Value="coffreCreate.Description"
                                  Variant="Variant.Outlined"
                                  Label="Description" HelperText="Vault decription" />

                    <MudText>Password hash is @(pwdReadOk ? "Ok" : "not Ok")</MudText>
                </MudItem>
                <MudItem xs="12" sm="6" md="6">
                    <MudTextField @bind-Value="coffreCreate.PasswordHash"
                                  Variant="Variant.Outlined" ReadOnly Disabled
                                  Label="PasswordHash" HelperText="Hashed pwd"
                                  
                                   />
                    <MudTextField @bind-Value="coffreCreate.Salt"
                                      Variant="Variant.Outlined" ReadOnly Disabled
                                  Label="Salt" HelperText="Salt"
                                   />

                    <MudTextField @bind-Value="keyString"
                                      Variant="Variant.Outlined" ReadOnly Disabled
                                  Label="Key string" HelperText="Key string"
                                   />
            
               

                 </MudItem>
                </MudGrid>

            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    private string Login { get; set; } = "";
    private string Password { get; set; } = "";

    private string LoginToEncrypt { get; set; } = "";
    private string PwdToEncrypt { get; set; } = "";
    private string UrlToEncrypt { get; set; } = "";
    private string InputToEncrypt { get; set; } = "";
    private string iv { get; set; } = "";

    private string DecryptedData { get; set; } = "";
    private string EncryptedData { get; set; } = "";

    private byte[] key=[];
 

    private KeyObj ko { get; set; } = new();
    private EntreeModel em { get; set; } = new();
    private ClairTextModel ctm { get; set; } = new();

    private MudTextField<string> keyGenReference = new();
    private MudTextField<string> saltGenReference = new();

    private class EntreeModel
    {
        public string loginTag { get; set; }         = "";
        public string passwordTag { get; set; }      = "";
        public string urlTag { get; set; }           = "";
        public string Cipherlogin { get; set; }      = "";
        public string Cipherpassword { get; set; }   = "";
        public string CipherUrl { get; set; }        = "";
        public string ivLogin { get; set; }          = "";
        public string ivPassword { get; set; }       = "";
        public string ivUrl { get; set; }            = "";
        public string DecryptedLogin { get; set; }   = "";
        public string DecryptedPassword { get; set; }= "";
        public string DecryptedUrl { get; set; } = "";
    }
    private class KeyObj
    {
        public byte[] keyBits { get; set; }     = [];
        public string privateKey { get; set; }  = "";
        public byte[] saltBits { get; set; }    = [];
        public string salt { get; set; }        = "";
    }

    private class ClairTextModel
    {
        public string Url { get; set; }     = "";
        public string Login { get; set; }   = "";
        public string Password { get; set; }= "";
    }




    

}